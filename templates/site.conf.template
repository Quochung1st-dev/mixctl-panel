# {{DOMAIN}} configuration
server {
    listen 80;
    server_name {{DOMAIN}} www.{{DOMAIN}};
    
    access_log /var/log/nginx/{{DOMAIN}}-access.log;
    error_log /var/log/nginx/{{DOMAIN}}-error.log;

    # Redirect to HTTPS if SSL is enabled
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name {{DOMAIN}} www.{{DOMAIN}};

    ssl_certificate /etc/mix-cdn/ssl/{{DOMAIN}}/fullchain.pem;
    ssl_certificate_key /etc/mix-cdn/ssl/{{DOMAIN}}/privkey.pem;

    # SSL configurations
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Cache settings
    proxy_cache MIX_CACHE;
    proxy_cache_key "$scheme$host$request_uri";
    proxy_cache_valid 200 302 1h;
    proxy_cache_valid 404 1m;
    proxy_cache_use_stale error timeout updating;
    proxy_cache_background_update on;
    proxy_cache_lock on;

    # Redis caching layer
    location = /redis-fetch {
        internal;
        redis2_query get $arg_key;
        redis2_pass redis_cache;
    }

    # Proxy settings
    location / {
        proxy_pass http://{{ORIGIN}};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache control headers
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Redis-Cache $redis_cache_status;
    }

    # Cache purge endpoint
    location ~ /purge(/.*) {
        allow 127.0.0.1;
        deny all;
        
        content_by_lua_file /usr/local/lib/lua/purge.lua;
    }

    # Health check
    location /cdn-health {
        access_log off;
        return 200 "OK";
    }
}